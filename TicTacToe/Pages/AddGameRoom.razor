@page "/addGameRoom"
@using Extensions;
@using System.Threading;
@using Data;
@using Microsoft.AspNetCore.SignalR.Client;
@using Hubs;
@using System.Web;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
<h1>Oyun Odası Ekle</h1>

@*<p>Current count: @currentCount</p>*@
<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th scope="col">Oda İsmi</th>
            <th scope="col">Doluluk</th>
        </tr>
        <tr>
            <th scope="col">İstanbul</th>
            <th scope="col"> 0 / 2</th>
            <th scope="col">
                <button id="btn-join-group" class="btn btn-primary m-1" @onclick='(() => JoinGroup("İstanbul"))'>Gruba Gir</button>
            </th>
        </tr>

        <tr>
            <th scope="col">Ankara</th>
            <th scope="col"> 0 / 2</th>
            <th scope="col">
                <button id="btn-join-group" class="btn btn-primary m-1" @onclick='(() => JoinGroup("Ankara"))'>Gruba Gir</button>
            </th>
        </tr>
        "(() => GameClick(6))"

    </thead>
    <tbody>
        @*@((MarkupString)CreateTable())*@

    </tbody>
</table>
<div style="max-width:200px" class="row new-group-buttons">
    <input type="text"
           id="groupName"
           @bind="@GroupName"
           class="form-control"
           placeholder="Oda İsmi Giriniz"
           required />
    @*<button id="" class="" @onclick="AddGroup">Yeni Oda Ekle</button>*@
    @* <button id="btn-join-group" class="btn btn-primary m-1" @onclick="JoinGroup">Join Group</button>*@

    <button id="btn-leave-group" class="btn btn-primary m-1" @onclick="LeaveGroup">Leave Group</button>
    <button id="btn-list-group" class="btn btn-primary m-1" @onclick="ListGroup1">List Group</button>

   
</div>




@code {



    private HubConnection _hubConnection;
    // int groupCount = 0;
    //int newGroupCount = 0;
    public string? GroupName;
    public List<string> _groupList { get; set; }
    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gameHub"))
            .Build();



        _hubConnection.On<List<string>>(ClientEndpoints.ListGroup, async (GroupList) =>
        {
            _groupList = GroupList;

            //     await ListGroup();
        });
        // await ListGroup();
        await _hubConnection.StartAsync();
        //CreateTable();

    }

    Task AddGroup() => _hubConnection.SendAsync("AddGroup", _hubConnection.ConnectionId, @GroupName);

    Task JoinGroup(string groupName) => _hubConnection.SendAsync("JoinGroup", _hubConnection.ConnectionId, groupName);

    Task LeaveGroup() => _hubConnection.SendAsync("LeaveGroup", _hubConnection.ConnectionId, @GroupName);

    Task ListGroup1() => _hubConnection.SendAsync("ListGroup1");




}
